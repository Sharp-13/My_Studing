# Задача 1. Маніпуляція парами списків.

# Уявимо, що в нас є два списки: list_1 і list_2, що задані в коді змінними
#
# Для кожного з них треба вивести на екран:
# 1. Список list_3 що є відсортованим об'єднанням двох входящих списків
# Наприклад, list_1 = [1,2], list_2 = [4,3]
# list_3 = [1, 2, 3, 4]
# 2. Список cartesian_product що складається з кортежів виду (l1, l2), де l1 - елементи першого списку, l2 - елементи другого.
# Наприклад, list_1 = [1,2], list_2 = [3,4]
# cartesian_product = [(1,3), (1,4), (2,3), (2,4)]
# 3. Список елементів, присутніх у обох списках intersection_list

list_1 = [1, 2, 4, 5]
list_2 = [3, 5, 7, 1]

# Задача 2. Переведення рядку в список, агрегація списку.
#
# Напишіть програму, що:
#
# 1. Приймає на вхід список чисел, розділених комою
# 2. Якщо список на вхід подано не числовий - виводить помилку
# 3. Рахує суму і добуток усіх елементів списку
# 4. Виводить на екран виключно ті числа, що без остачі діляться на 3
#
# Hint: розбити за якимось розділитилем рядок на список символів можна наступним чином:

example_string = "ab,cd,ef"
example_lsit = example_string.split(",")

#Задача 1.
# Уявимо, що у вас є список довільного ступеню вкладеності (приклад буде наведено нижче).
# Напишіть програму, котра перетворює вкладений список у плаский (тобто, додає вкладені елементи до основного списку).
# Наприклад, програма отримує на вхід input_list = [1, 2, 3, [4, 5, 6, [7]]]
# Результатом її роботи є список output_list = [1, 2, 3, 4, 5, 6, 7]

# Hint: перевірити, чи є об'єкт списком можна викликавши вбудовану функцію isinstance, котра першим аргументом приймає
# об'єкт і другим - конструктор типу.

print(isinstance("a", str))
print(isinstance(["a"], list))

example_input_list = ["a", "b", ["c"], [[["d"]]], ["e", ["f", "g"]]]

# Задача 4. Cортування списку.

# Напишіть програму, що отримує на вхід гомогенний список, заданий змінною в коді і видає його відсортовану версію.
# В задачі не можна використовувати метод sort чи sorted.
# Також в задачі немає вимог на ефективність алгоритму.
#
# Hint: відсортувати список можна, якщо кожен елемент порівняти з кожним елементом і поміняти їх місцями, якщо вони не впорядковані

list_for_sorting = [2, 5, 7, 2, 8, 10, 1, -1, -2]